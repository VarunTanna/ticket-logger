{"version":3,"sources":["components/TicketList/index.js","utils/queries.js","pages/Home.js","utils/mutations.js","utils/auth.js","pages/Signup.js","pages/Login.js","components/Header/index.js","components/Footer/index.js","App.js","index.js"],"names":["TicketList","tickets","title","length","className","map","ticket","name","style","fontSize","skills","to","_id","QUERY_TICKETS","gql","Home","useQuery","loading","data","ADD_TICKET","LOGIN_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Signup","useState","email","password","formState","setFormState","useMutation","addTicket","error","handleChange","event","target","value","handleFormSubmit","preventDefault","console","log","variables","Auth","login","onSubmit","placeholder","type","onChange","cursor","message","Login","props","Header","fontWeight","loggedIn","onClick","logout","Footer","useLocation","navigate","useNavigate","pathname","getFullYear","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b01173c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst TicketList = ({ tickets, title }) => {\n  if (!tickets.length) {\n    return <h3>No Tickets Yet</h3>;\n  }\n\n  return (\n    <div>\n      <h3 className=\"text-primary\">{title}</h3>\n      <div className=\"flex-row justify-space-between my-4\">\n        {tickets &&\n          tickets.map((ticket) => (\n            <div key={ticket._id} className=\"col-12 col-xl-6\">\n              <div className=\"card mb-3\">\n                <h4 className=\"card-header bg-dark text-light p-2 m-0\">\n                  {ticket.name} <br />\n                  <span className=\"text-white\" style={{ fontSize: \"1rem\" }}>\n                    currently has {ticket.skills ? ticket.skills.length : 0}{\" \"}\n                    tickets\n                    {ticket.skills && ticket.skills.length === 1 ? \"\" : \"s\"}\n                  </span>\n                </h4>\n\n                <Link\n                  className=\"btn btn-block btn-squared btn-light text-dark\"\n                  to={`/tickets/${ticket._id}`}\n                >\n                  View and endorse your tickets.\n                </Link>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TicketList;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      email\n      password\n      github\n      \n    }\n  }\n`;\n\n\nexport const QUERY_TICKETS = gql`\n  query allTickets {\n    tickets {\n      _id\n      name\n      skills\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_TICKET = gql`\n  query singleTicket($ticketId: ID!) {\n    ticket(ticketId: $ticketId) {\n      _id\n      name\n      skills\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      name\n      tickets\n    }\n  }\n`;","import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport TicketList from '../components/TicketList';\n\nimport { QUERY_TICKETS } from '../utils/queries';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_TICKETS);\n  const tickets = data?.tickets || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div className=\"col-12 col-md-10 my-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <TicketList\n              tickets={tickets}\n              title=\"Here are the current tickets...\"\n            />\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n\n//making sure pull request works","import { gql } from '@apollo/client';\n\nexport const ADD_TICKET = gql`\n  mutation addTicket($name: String!, $email: String!, $password: String!) {\n    addTicket(name: $name, email: $email, password: $password) {\n      token\n      ticket {\n        _id\n        name\n      }\n    }\n  }\n`;\n\nexport const ADD_TICKETS = gql`\n  mutation addTickets($ticketId: ID!, $tickets: String!) {\n    addSkill(ticketId: $ticketId, tickets: $tickets) {\n      _id\n      name\n      tickets\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      ticket {\n        _id\n        name\n      }\n    }\n  }\n`;\n\nexport const REMOVE_TICKETS = gql`\n  mutation removeTickets($tickets: String!) {\n    removeTickets(tickets: $tickets) {\n      _id\n      name\n      tickets\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_TICKET } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const [addTicket, { error, data }] = useMutation(ADD_TICKET);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addTicket({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addTicket.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Auth from \"../../utils/auth\";\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-info text-dark mb-4 py-3 display-flex align-center\">\n      <div className=\"container flex-column justify-space-between-lg justify-center align-center text-center\">\n        <Link className=\"text-dark\" to=\"/\">\n          <h1 className=\"m-0\" style={{ fontSize: \"3rem\" }}>\n            Ticket Logger\n          </h1>\n        </Link>\n        <p className=\"m-0\" style={{ fontSize: \"1.75rem\", fontWeight: \"700\" }}>\n          Check your ticket status!\n        </p>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/me\">\n                View My Tickets\n              </Link>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    return (\n        <footer className=\"w-100 mt-auto text-dark p-4\">\n          <div className=\"container text-center mb-5\">\n            {location.pathname !== '/' && (\n              <button\n                className=\"btn btn-dark mb-3\"\n                onClick={() => navigate(-1)}\n              >\n                &larr; Go Back\n              </button>\n            )}\n            <h4>&copy; {new Date().getFullYear()} - Varun, Sila, Chris, Victoria.</h4>\n          </div>\n        </footer>\n      );\n};\n\nexport default Footer;","import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\n//import Profile from './pages/Profile';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\n//import Group from './pages/Group';\n//import Project from './pages/Project';\n//import Tickets from './pages/Tickets';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              {/* <Route \n                path=\"/me\" \n                element={<Profile />} \n              /> */}\n              {/* <Route \n                path=\"/profiles/:profileId\" \n                element={<Profile />} \n              /> */}\n              {/* <Route \n                path=\"/tickets\" \n                element={<Tickets />} \n              />\n              <Route \n                path=\"/projects/\" \n                element={<Project />} \n              />\n              <Route \n                path=\"/groups/\" \n                element={<Group />} \n              /> */}\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}