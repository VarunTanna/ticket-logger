{"version":3,"sources":["components/TicketList/index.js","utils/queries.js","pages/Home.js","utils/mutations.js","utils/auth.js","pages/Signup.js","pages/Login.js","pages/Project.js","pages/NewProject.js","pages/Tickets.js","components/Header/index.js","components/Footer/index.js","pages/NewTicket.js","pages/MyGroups.js","pages/NewGroup.js","App.js","index.js"],"names":["TicketList","tickets","title","length","className","map","ticket","name","style","fontSize","skills","to","_id","QUERY_ALL_USERS","gql","QUERY_TICKETS","QUERY_GROUPS","QUERY_PROJECTS","Home","useQuery","loading","data","CREATE_USER","LOGIN_USER","CREATE_PROJECT","CREATE_TICKET","CREATE_GROUP","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Signup","useState","email","password","github","formState","setFormState","useMutation","addUser","error","handleChange","event","target","value","toLowerCase","handleFormSubmit","preventDefault","console","log","variables","Auth","login","onSubmit","placeholder","type","onChange","cursor","message","Login","props","Project","projects","project","repo","group","form","margin","input","display","width","NewProject","groupList","groups","groupOptions","i","option","key","label","push","projectName","setProjectName","projectRepo","setProjectRepo","projectGroupId","setProjectGroupId","createProject","e","rows","options","onClick","groupId","TicketsList","description","order","duedate","Header","src","loggedIn","logout","Footer","useLocation","navigate","useNavigate","pathname","getFullYear","NewTicket","projectList","projectOptions","formData","setFormData","createTicket","inputChange","isMulti","MyGroups","users","user","href","alt","NewGroup","userList","userOptions","groupName","setGroupName","groupUsers","createGroup","onlyUnique","index","self","indexOf","uniqueUsers","filter","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","Tickets","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2693134.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst TicketList = ({ tickets, title }) => {\n  if (!tickets.length) {\n    return <h3>No Tickets Yet</h3>;\n  }\n\n  return (\n    <div>\n      <h3 className=\"text-primary\">{title}</h3>\n      <div className=\"flex-row justify-space-between my-4\">\n        {tickets &&\n          tickets.map((ticket) => (\n            <div key={ticket._id} className=\"col-12 col-xl-6\">\n              <div className=\"card mb-3\">\n                <h4 className=\"card-header bg-dark text-light p-2 m-0\">\n                  {ticket.name} <br />\n                  <span className=\"text-white\" style={{ fontSize: \"1rem\" }}>\n                    currently has {ticket.skills ? ticket.skills.length : 0}{\" \"}\n                    tickets\n                    {ticket.skills && ticket.skills.length === 1 ? \"\" : \"s\"}\n                  </span>\n                </h4>\n\n                <Link\n                  className=\"btn btn-block btn-squared btn-light text-dark\"\n                  to={`/tickets/${ticket._id}`}\n                >\n                  View and endorse your tickets.\n                </Link>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TicketList;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($email: String!) {\n    user(email: $email) {\n      _id\n      email\n      password\n      github\n      \n    }\n  }\n`;\n\nexport const QUERY_ALL_USERS = gql`\n  query users {\n    users {\n      _id\n      email\n      github\n    }\n  }\n`;\n\nexport const QUERY_TICKETS = gql`\n  query tickets {\n    tickets {\n      _id\n      title\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_TICKET = gql`\n  query ticket($ticketId: ID!) {\n    ticket(ticketId: $ticketId) {\n      _id\n      title\n      ticket\n    }\n  }\n`;\n\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      name\n      tickets\n    }\n  }\n`;\n\nexport const QUERY_GROUPS = gql`\n  query groups {\n    groups {\n      _id\n      name\n      users {\n        email\n        github\n      }\n    }\n  }\n`;\n\nexport const QUERY_GROUP_USERS = gql`\n  query group {\n    users {\n      _id\n      email\n      github\n    }\n  }\n`;\n\n// export const QUERY_GROUP_TICKETS = gql`\n//   query groupTickets {\n//     group {\n//       _id\n//       email\n//       github\n//     tickets {\n//       _id\n//       name\n//       tickets\n//     }\n//     } \n//   }\n// `;\n\n// export const QUERY_ALL_USER_TICKETS = gql`\n// query userTickets($email: String!) {\n//   user(email: $email){\n//       _id\n//       email\n//       github\n//       tickets { \n//       _id\n//       title\n//     }\n//     }\n//   }\n// `;\n\nexport const QUERY_PROJECTS = gql`\n  query projects {\n    projects {\n      _id\n      name\n      repo\n    }\n  }\n`;","import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport TicketList from '../components/TicketList';\n\nimport { QUERY_TICKETS } from '../utils/queries';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_TICKETS);\n  const tickets = data?.tickets || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div className=\"col-12 col-md-10 my-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <TicketList\n              tickets={tickets}\n              title=\"Here are the current tickets...\"\n            />\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n\n//making sure pull request works","import { gql } from '@apollo/client';\n\nexport const CREATE_USER = gql`\n  mutation addUser($email: String!, $password: String!, $github: String!,) {\n    addUser(email: $email, password: $password, github: $github, ) {\n      token\n      user {\n        _id\n        github\n        email\n      }\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        email\n        github\n      }\n    }\n  }\n`;\n\nexport const CREATE_PROJECT = gql`\n  mutation createProject($name: String!, $repo: String!, $groupId: ID!) {\n    createProject(name: $name, repo: $repo, groupId: $groupId) {\n      _id\n      name\n      repo\n      group {\n        name\n      }\n    }\n  }\n`;\n\nexport const CREATE_TICKET = gql`\n  mutation createTicket($title: String!, $description: String!, $type: String!, $project: String!, $order: Int!, $duedate: String!, ) {\n    createTicket(title: $title, description: $description, type: $type, project: $project, order: $order, duedate: $duedate) {\n      title\n      description\n      type\n      project\n      order\n      duedate\n    }\n  }\n`;\n\nexport const CREATE_GROUP = gql`\n  mutation createGroup($name: String!, $users:[String]!) {\n    createGroup(name: $name, users: $users) {\n      name\n      users {\n        email\n      } \n    }\n  }\n`;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { CREATE_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    email: '',\n    password: '',\n    github: '',\n  });\n  const [addUser, { error, data }] = useMutation(CREATE_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    //console.log(name, value, event)\n    setFormState({\n      email: formState.email.toLowerCase(),\n      password: formState.password,\n      github: formState.github,\n      [name]: value,\n    });\n    //console.log(name, value, event, formState)\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your GitHub ID\"\n                  name=\"github\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { QUERY_PROJECTS } from '../utils/queries';\n\nconst Project = () => {\n  const {loading, data} = useQuery(QUERY_PROJECTS);\n  const projects = data?.projects || [];\n  console.log(projects);\n\nif (!projects.length) {\n  return (\n    <>\n      <h3>No Projects Yet</h3>\n      <Link className=\"btn btn-lg btn-primary m-2\" to=\"/newProject\">\n      Add a Project\n      </Link>\n    </>\n  );\n}\n  return (\n    <>\n    <Link className=\"btn btn-sm btn-primary m-2\" to=\"/newProject\">\n           Add a Project\n           </Link>\n          <table>\n            <tr>\n              <th>Name</th>\n              <th>Repo</th>\n              <th>Group</th>\n            </tr>\n            {projects && projects.map((project) => (\n             <tr>\n               <td>{project.name}</td>\n               <td>{project.repo}</td>\n               <td>{project.group}</td>\n             </tr> \n            ))}\n          </table>\n           </>\n  )\n  }\n\nexport default Project;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useQuery } from \"@apollo/client\";\nimport { CREATE_PROJECT } from '../utils/mutations'\nimport { QUERY_GROUPS} from '../utils/queries'\nimport Select from \"react-select\";\n\nfunction NewProject() {\n\n  const { loading, data } = useQuery(QUERY_GROUPS)\n\n  const groupList = data?.groups || [];\n\n  console.log(groupList);\n\n  const groupOptions = [];\n\n  for (let i=0; i < groupList.length; i++) {\n    let option = { key: groupList[i]._id, value: groupList[i]._id, label: groupList[i].name };\n    groupOptions.push(option);\n  };\n\n  const [projectName, setProjectName] = useState('');\n  const [projectRepo, setProjectRepo] = useState('');\n  const [projectGroupId, setProjectGroupId] = useState();\n\n  const [createProject, {error}] = useMutation(CREATE_PROJECT);\n\n  const inputChangeA = (e) => {\n    const { name, value } = e.target;\n    setProjectName(value);\n  };\n\n  const inputChangeB = (e) => {\n    const { name, value } = e.target;\n    setProjectRepo(value);\n  };\n\n  const handleChange = (e) => {\n    console.log(e);\n    setProjectGroupId(e.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(projectRepo);\n    const { data } = createProject({\n      variables: { groupId: projectGroupId, name: projectName, repo: projectRepo }\n    });\n  }\n\n  return (\n      <>\n          <h1>Create a Project</h1>\n          <form className=\"form\" style={style.form}>\n              <label>Name:</label>\n              <input \n                  value={projectName}\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"project name\"\n                  onChange={inputChangeA}\n                  style={style.input}\n              />\n              <label>Repository:</label>\n              <textarea \n                  rows={4}\n                  value={projectRepo}\n                  name=\"repo\"\n                  type=\"textarea\"\n                  placeholder=\"enter github repo\"\n                  onChange={inputChangeB}\n                  style={style.input}\n              />\n              <label>Group:</label>\n              {/* <select name=\"group\" onChange={inputChange}>\n                {groupList.map((group) => {\n                  return (\n                    <option key={group._id} value={group.name}>\n                      {group.name}\n                    </option>\n                  );\n                })}\n              </select> */}\n              <Select options={groupOptions} onChange={handleChange}/>\n              <br></br>\n              <button type=\"button\" onClick={handleSubmit} className=\"submit\">\n                  Submit\n              </button>\n          </form>\n          {error && (\n              <div>\n                  <p className=\"error-text\">{error}</p>\n              </div>\n          )}\n      </>\n  )\n}\n\nconst style = {\n  form: {\n      margin: '18px',\n  },\n  input: {\n      display: 'block',\n      margin: '5px',\n      width: '100%',\n  },\n}\n\nexport default NewProject;","import { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { QUERY_TICKETS } from \"../utils/queries\";\n// import { useQuery } from \"@apollo/client\";\n\n// import TicketsList from \"../components/TicketsList\";\n\n// import { QUERY_TICKETS } from '../utils/queries';\n\nconst TicketsList = () => {\n  const tickets = useQuery(QUERY_TICKETS);\n\n  if (!tickets.length) {\n    return (\n      <>\n        <h3>No Tickets Yet</h3>\n        <Link className=\"btn btn-lg btn-primary m-2\" to=\"/newTicket\">\n        Create a Ticket\n        </Link>\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"ticketTable\">\n          <table>\n            <tr>\n              <th>Title</th>\n              <th>Type</th>\n              <th>Description</th>\n              <th>Project</th>\n              <th>Order</th>\n              <th>Due-Date</th>\n            </tr>\n            {tickets && tickets.map((ticket) => (\n             <tr>\n               <td>{ticket.title}</td>\n               <td>{ticket.type}</td>\n               <td>{ticket.description}</td>\n               <td>{ticket.project}</td>\n               <td>{ticket.order}</td>\n               <td>{ticket.duedate}</td>\n             </tr> \n            ))}\n          </table>\n        </div>\n    </div>\n  )\n}\n\nexport default TicketsList;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Auth from \"../../utils/auth\";\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-info text-dark mb-4 py-3 display-flex align-center\">\n      <div className=\"container flex-column justify-space-between-lg justify-center align-center text-center\">\n        <Link className=\"text-dark\" to=\"/\">\n          <h1 className=\"m-0\" style={{ fontSize: \"3rem\" }}>\n            Ticket Logger \n          </h1>\n          <img width='80px' src='logo192.png' ></img>\n        </Link>\n        {/* <p className=\"m-0\" style={{ fontSize: \"1.75rem\", fontWeight: \"700\" }}>\n          Check your ticket status!\n        </p> */}\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/myTickets\">\n                View My Tickets\n              </Link>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/myGroups\">\n                My Groups\n              </Link>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/project\">\n                My Projects\n              </Link>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    return (\n        <footer className=\"w-100 mt-auto text-dark p-4\">\n          <div className=\"container text-center mb-5\">\n            {location.pathname !== '/' && (\n              <button\n                className=\"btn btn-dark mb-3\"\n                onClick={() => navigate(-1)}\n              >\n                &larr; Go Back\n              </button>\n            )}\n            <h4>&copy; {new Date().getFullYear()} - Varun, Sela, Chris, Victoria.</h4>\n          </div>\n        </footer>\n      );\n};\n\nexport default Footer;","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useQuery } from \"@apollo/client\";\nimport { CREATE_TICKET } from '../utils/mutations'\nimport { QUERY_PROJECTS } from '../utils/queries'\nimport Select from \"react-select\";\n\nfunction NewTicket() {\n\n  const { loading, data } = useQuery(QUERY_PROJECTS);\n\n  const projectList = data?.projects || [];\n\n  console.log(projectList);\n\n  const projectOptions = [];\n\n  for (let i=0; i < projectList.length; i++) {\n    let option = { key: projectList[i]._id, value: projectList[i].email, label: projectList[i].email };\n    projectOptions.push(option);\n  };\n\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    type: '',\n    project: '',\n    order: ``,\n    duedate: '',\n  });\n\n  const [createTicket, {error}] = useMutation(CREATE_TICKET);\n\n  const inputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n      \n    const { data } = createTicket({\n      variables: { ...formData }\n    });\n  }\n\n  return (\n      <>\n          <h1>Create a Ticket</h1>\n          <form className=\"form\" style={style.form}>\n              <label>Title:</label>\n              <input \n                  value={formData.title}\n                  name=\"title\"\n                  type=\"text\"\n                  placeholder=\"ticket title\"\n                  onChange={inputChange}\n                  style={style.input}\n              />\n              <label>Description:</label>\n              <textarea \n                  rows={4}\n                  value={formData.description}\n                  name=\"description\"\n                  type=\"textarea\"\n                  placeholder=\"Type your description here\"\n                  onChange={inputChange}\n                  style={style.input}\n              />\n              <label>Type:</label>\n              <input \n                  value={formData.type}\n                  name=\"type\"\n                  type=\"text\"\n                  placeholder=\"ticket type\"\n                  onChange={inputChange}\n                  style={style.input}\n              />\n              <label>Project:</label>\n              {/* <select name=\"project\" onChange={inputChange}>\n                {projectList.map((project) => {\n                  return (\n                    <option key={project._id} value={project.name}>\n                      {project.name}\n                    </option>\n                  );\n                })}\n              </select> */}\n              <Select options={projectOptions} isMulti/>\n              <br></br>\n              {/* <input \n                  value={project}\n                  name=\"project\"\n                  type=\"text\"\n                  placeholder=\"project name\"\n                  onChange={inputChange}\n                  style={style.input}\n              /> */}\n              <label>Order:</label>\n              <input \n                  value={formData.order}\n                  name=\"order\"\n                  type=\"integer\"\n                  placeholder=\"order number\"\n                  onChange={inputChange}\n                  style={style.input}\n              />\n              <label>Due Date:</label>\n              <input \n                  value={formData.duedate}\n                  name=\"duedate\"\n                  type=\"text\"\n                  placeholder=\"ticket due date\"\n                  onChange={inputChange}\n                  style={style.input}\n              />\n              <br></br>\n              <button type=\"button\" onClick={handleSubmit} className=\"submit\">\n                  Submit\n              </button>\n          </form>\n          {error && (\n              <div>\n                  <p className=\"error-text\">{error}</p>\n              </div>\n          )}\n      </>\n  )\n}\n\nconst style = {\n  form: {\n      margin: '18px',\n  },\n  input: {\n      display: 'block',\n      margin: '5px',\n      width: '100%',\n  },\n}\n\nexport default NewTicket;","import React from \"react\";\nimport { useQuery } from '@apollo/client';\nimport { QUERY_GROUPS } from \"../utils/queries\";\nimport { Link } from 'react-router-dom';\n\nconst MyGroups = () => {\n  const { loading, data } = useQuery(QUERY_GROUPS);\n  console.log(data);\n  const groups = data?.groups || [];\n\n  console.log(groups);\n\n  if (!groups.length) {\n    return (\n      <>\n        <h3>No Groups Yet</h3>\n        <Link className=\"btn btn-lg btn-primary m-2\" to=\"/newGroup\">\n          Create a Group\n        </Link>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Link className=\"btn btn-lg btn-primary m-2\" to=\"/newGroup\">\n        Create a Group\n      </Link>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Users</th>\n            <th>Delete Group</th>\n          </tr>\n        </thead>\n        {groups && groups.map((group) => (\n          <tbody>\n            <tr>\n              <td>{group.name}</td>\n              <td>\n                {\n                  group.users.map(user => <span className='btn m-1'>{user.email}</span>)\n                }\n              </td>\n              <td>\n                <a href={'nowhere/' + group._id}><img src='delete.png' alt={'Delete group ' + group.name}></img></a>\n              </td>\n            </tr>\n          </tbody>\n        ))}\n      </table>\n    </>\n  )\n}\n\nexport default MyGroups;","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_GROUP } from \"../utils/mutations\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ALL_USERS } from \"../utils/queries\";\nimport Select from \"react-select\";\n\nfunction NewGroup() {\n\n  const { loading, data } = useQuery(QUERY_ALL_USERS);\n\n  const userList = data?.users || [];\n  console.log(userList);\n\n  const userOptions = [];\n\n  for (let i=0; i < userList.length; i++) {\n    // let option = { key: userList[i]._id, value: userList[i].email, label: userList[i].email };\n    let option = { value: userList[i]._id, label: userList[i].email };\n    userOptions.push(option);\n  };\n\n  console.log(userOptions);\n\n  const [groupName, setGroupName] = useState('');\n  // const [groupUsers, setGroupUsers] = useState('');\n  const groupUsers = [];\n\n  const [createGroup, { error }] = useMutation(CREATE_GROUP);\n\n  const inputChange = (e) => {\n    const { name, value } = e.target;\n    // setFormData({ ...formData, [name]: value });\n    setGroupName(value);\n  };\n\n  const handleChange = (e) => {\n    console.log(e);\n\n    for (let i = 0; i < e.length; i++) {\n      let user = e[i].value;\n      groupUsers.push(user);\n      console.log(groupUsers)\n    };\n    //groupUsers = groupUsers => [...new Set(groupUsers)];\n  };\n\n  function onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(formData);\n    console.log(groupUsers);\n    let uniqueUsers = groupUsers.filter(onlyUnique);\n    const { data } = createGroup({\n      variables: { name: groupName, users: uniqueUsers }\n    });\n  };\n\n  return (\n    <>\n      <h1>Create a Group</h1>\n      <form className=\"form\" style={style.form}>\n        <label>Name:</label>\n        <input\n          value={groupName}\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Group name\"\n          onChange={inputChange}\n          style={style.input}\n        />\n        <label>Users:</label>\n        {/* <select name=\"users\" onChange={inputChange} multiple={true}>\n          {userList.map((user) => {\n            return (\n              <option key={user._id} value={user.email}>\n                {user.email}\n              </option>\n            );\n          })}\n        </select> */}\n        <Select options={userOptions} onChange={handleChange} isMulti/>\n        <button type=\"button\" onClick={handleSubmit} className=\"submit\">\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n\nconst style = {\n  form: {\n    margin: '18px',\n  },\n  input: {\n    display: 'block',\n    margin: '5px',\n    width: '100%',\n  },\n};\n\nexport default NewGroup;","import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\n// import User from './pages/User';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Project from './pages/Project';\nimport NewProject from './pages/NewProject';\nimport TicketsList from './pages/Tickets';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport NewTicket from './pages/NewTicket';\nimport MyGroups from './pages/MyGroups';\nimport NewGroup from './pages/NewGroup';\n// import Tickets from './pages/Tickets';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route\n                path=\"/myTickets\"\n                element={<TicketsList />}\n              />\n              <Route\n                path=\"/newTicket\"\n                element={<NewTicket />}\n              />\n              <Route\n                path=\"/myGroups\"\n                element={<MyGroups />}\n              />\n              <Route\n                path=\"/newGroup\"\n                element={<NewGroup />}\n              />\n              {/* { <Route \n                path=\"/me\" \n                element={<User />} \n              /> } \n               { <Route \n                path=\"/profiles/:profileId\" \n                element={<Profile />} \n              /> }  */}\n               {/* { <Route \n                path=\"/tickets\" \n                element={<Tickets />} \n              />}  */}\n              <Route \n                path=\"/newProject/\" \n                element={<NewProject />} \n              />\n               <Route \n                path=\"/Project/\" \n                element={<Project />} \n              />\n              {/* <Route \n                path=\"/groups/\" \n                element={<Group />} \n              />  */}\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}